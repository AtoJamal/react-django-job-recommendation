# Generated by Django 5.2.1 on 2025-05-14 10:48

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_column='firstName', max_length=255)),
                ('middle_name', models.CharField(blank=True, db_column='middleName', max_length=255, null=True)),
                ('last_name', models.CharField(db_column='lastName', max_length=255)),
                ('age', models.PositiveIntegerField(blank=True, db_column='age', null=True, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(100)])),
                ('gender', models.CharField(blank=True, db_column='gender', max_length=255, null=True)),
                ('location', models.CharField(blank=True, db_column='location', max_length=255, null=True)),
                ('email', models.EmailField(db_column='email', max_length=254, unique=True)),
                ('password', models.CharField(db_column='password', max_length=255)),
                ('is_email_verified', models.BooleanField(db_column='isEmailVerified', default=False)),
                ('role', models.CharField(blank=True, choices=[('customerSupport', 'Customer Support'), ('approver', 'Approver'), ('update', 'Update'), ('security', 'Security')], max_length=15, null=True)),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('location', models.CharField(blank=True, db_column='location', max_length=255, null=True)),
                ('number_of_employees', models.PositiveIntegerField(blank=True, db_column='numberOfEmployees', null=True)),
                ('year_established', models.PositiveIntegerField(blank=True, db_column='yearEstablished', null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2100)])),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='JobSeeker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_column='firstName', max_length=255)),
                ('middle_name', models.CharField(blank=True, db_column='middleName', max_length=255, null=True)),
                ('last_name', models.CharField(db_column='lastName', max_length=255)),
                ('age', models.PositiveIntegerField(blank=True, db_column='age', null=True, validators=[django.core.validators.MinValueValidator(16), django.core.validators.MaxValueValidator(100)])),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], db_column='gender', max_length=6, null=True)),
                ('location', models.CharField(blank=True, db_column='location', max_length=255, null=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, db_column='phoneNumber', max_length=255, null=True)),
                ('is_email_verified', models.BooleanField(db_column='isEmailVerified', default=False)),
                ('password', models.CharField(blank=True, db_column='password', max_length=255, null=True)),
                ('degree', models.CharField(choices=[('Bachelor', 'Bachelor'), ('Master', 'Master'), ('PhD', 'PhD'), ('Diploma', 'Diploma')], db_column='degree', max_length=8)),
                ('experience', models.PositiveIntegerField(blank=True, db_column='experience', null=True)),
                ('graduation_year', models.PositiveIntegerField(blank=True, db_column='graduationYear', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('field_of_study', models.CharField(choices=[('Computer Science', 'Computer Science'), ('Engineering', 'Engineering'), ('Business', 'Business'), ('Arts', 'Arts'), ('Medicine', 'Medicine')], db_column='fieldOfStudy', max_length=16)),
            ],
            options={
                'verbose_name': 'Job Seeker',
                'verbose_name_plural': 'Job Seekers',
                'db_table': 'jobseeker',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(db_column='message')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_column='firstName', max_length=255)),
                ('middle_name', models.CharField(blank=True, db_column='middleName', max_length=255, null=True)),
                ('last_name', models.CharField(db_column='lastName', max_length=255)),
                ('age', models.PositiveIntegerField(blank=True, db_column='age', null=True, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(100)])),
                ('gender', models.CharField(blank=True, db_column='gender', max_length=255, null=True)),
                ('location', models.CharField(blank=True, db_column='location', max_length=255, null=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=254, null=True, unique=True)),
                ('password', models.CharField(blank=True, db_column='password', max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, db_column='phoneNumber', max_length=255, null=True, unique=True)),
                ('is_email_verified', models.BooleanField(db_column='isEmailVerified', default=False)),
                ('company', models.ForeignKey(blank=True, db_column='companyId', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employers', to='api.company')),
            ],
            options={
                'verbose_name': 'Employer',
                'verbose_name_plural': 'Employers',
                'db_table': 'employer',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(db_column='jobTitle', max_length=255)),
                ('required_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], db_column='requiredGender', max_length=6, null=True)),
                ('posted_date', models.DateTimeField(auto_now_add=True, db_column='postedDate')),
                ('salary', models.DecimalField(blank=True, db_column='salary', decimal_places=2, max_digits=10, null=True)),
                ('category', models.CharField(blank=True, choices=[('IT', 'IT'), ('Engineering', 'Engineering'), ('Healthcare', 'Healthcare'), ('Finance', 'Finance'), ('Marketing', 'Marketing'), ('Education', 'Education'), ('Other', 'Other')], db_column='category', max_length=11, null=True)),
                ('required_year', models.PositiveIntegerField(blank=True, db_column='requiredYear', null=True)),
                ('quota', models.PositiveIntegerField(blank=True, db_column='quota', null=True)),
                ('deadline', models.DateField(blank=True, db_column='deadline', null=True)),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('status', models.CharField(blank=True, db_column='status', max_length=255, null=True)),
                ('admin', models.ForeignKey(blank=True, db_column='adminId', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_jobs', to='api.admin')),
                ('employer', models.ForeignKey(blank=True, db_column='employerId', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='api.employer')),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'db_table': 'job',
                'ordering': ['-posted_date'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(db_column='content')),
                ('time', models.DateTimeField(auto_now_add=True, db_column='time')),
                ('status', models.CharField(choices=[('Read', 'Read'), ('unRead', 'Unread')], db_column='status', default='unRead', max_length=6)),
                ('admin', models.ForeignKey(blank=True, db_column='adminId', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks', to='api.admin')),
                ('job_seeker', models.ForeignKey(db_column='jobSeekerId', on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='api.jobseeker')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'db_table': 'feedback',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='ClickHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_column='timeStamp')),
                ('job', models.ForeignKey(db_column='jobId', on_delete=django.db.models.deletion.CASCADE, related_name='click_history', to='api.job')),
                ('job_seeker', models.ForeignKey(db_column='jobSeekerId', on_delete=django.db.models.deletion.CASCADE, related_name='job_clicks', to='api.jobseeker')),
            ],
            options={
                'verbose_name': 'Click History',
                'verbose_name_plural': 'Click Histories',
                'db_table': 'clickhistory',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('job_seeker', models.ForeignKey(db_column='jobSeekerId', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.jobseeker')),
                ('message', models.ForeignKey(db_column='messageId', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.message')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notification',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('notCompleted', 'Not Completed')], db_column='status', default='notCompleted', max_length=12)),
                ('job_seeker', models.OneToOneField(db_column='jobSeekerId', on_delete=django.db.models.deletion.CASCADE, related_name='resume', to='api.jobseeker')),
            ],
            options={
                'verbose_name': 'Resume',
                'verbose_name_plural': 'Resumes',
                'db_table': 'resume',
            },
        ),
        migrations.CreateModel(
            name='JobApplicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_time', models.DateTimeField(auto_now_add=True, db_column='applicationTime')),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('rejected', 'Rejected'), ('pending', 'Pending')], db_column='status', default='pending', max_length=8)),
                ('job', models.ForeignKey(db_column='jobId', on_delete=django.db.models.deletion.CASCADE, related_name='applicants', to='api.job')),
                ('job_seeker', models.ForeignKey(db_column='jobSeekerId', on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to='api.jobseeker')),
            ],
            options={
                'verbose_name': 'Job Applicant',
                'verbose_name_plural': 'Job Applicants',
                'db_table': 'jobapplicant',
                'ordering': ['-application_time'],
                'unique_together': {('job', 'job_seeker')},
            },
        ),
    ]
